<Window x:Class="rowsSharp.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodel="clr-namespace:rowsSharp.ViewModel"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance Type=viewmodel:RowsVM}"
        mc:Ignorable="d"
        Background="{StaticResource Rows.Background}"
        Width="{Binding Config.StartupWidth, FallbackValue=1400}" Height="{Binding Config.StartupHeight, FallbackValue=600}"
        FontFamily="{Binding Config.FontFamily, FallbackValue='Courier New'}" FontSize="{Binding Config.PrimaryFontSize, FallbackValue=16}">

    <Window.InputBindings>
        <KeyBinding Gesture="CTRL+S" Command="{Binding Edit.SaveCommand}"/>
        <KeyBinding Gesture="CTRL+Z" Command="{Binding History.UndoCommand}"/>
        <KeyBinding Gesture="CTRL+Y" Command="{Binding History.RedoCommand}"/>
        <KeyBinding Gesture="CTRL+F" Command="{Binding Filter.FocusCommand}"/>
    </Window.InputBindings>

    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Edit.IsDirtyEditor}" Value="True">
                    <Setter Property="Title"
                            Value="{Binding Version, StringFormat='RowsSharp {0} - Unsaved Changes'}"/>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Title"
                    Value="{Binding Version, StringFormat='RowsSharp {0}'}"/>
        </Style>
    </Window.Style>

    <Window.Resources>
        <!-- Styles -->
        <ResourceDictionary>            
            <Style TargetType="ToolTip">
                <Setter Property="FontFamily" Value="{Binding Config.FontFamily, FallbackValue='Courier New'}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Config.UseToolTip}" Value="False">
                        <Setter Property="Template" Value="{x:Null}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Thumb">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Thumb">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding ExitCommand}" PassEventArgsToCommand="True"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid Margin="16,8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="26"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="{Binding Config.PreviewWidth}"/>
        </Grid.ColumnDefinitions>

        <!-- Toolbar (top) -->
        <Grid Grid.ColumnSpan="2" Margin="-16,-8,-16,8" Background="{StaticResource Rows.Header}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="72"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Expander Grid.ColumnSpan="2" Margin="24,14,0,0" IsExpanded="{Binding Edit.IsEditing}">
                <Grid Height="84" Margin="0,16,15,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="ALIASING" Style="{StaticResource Caption}"/>
                    <CheckBox Grid.Row="1" Content=" Input"  Command="{Binding Filter.FilterCommand}" IsChecked="{Binding Config.UseInputAlias}"/>
                    <CheckBox Grid.Row="2" Content=" Output" IsChecked="{Binding Config.UseOutputAlias}">
						<b:Interaction.Triggers>
							<b:EventTrigger EventName="Click">
								<b:InvokeCommandAction Command="{Binding Config.OutputAliasCommand}"/>
								<b:InvokeCommandAction Command="{Binding Filter.FilterCommand}"/>
							</b:EventTrigger>
						</b:Interaction.Triggers>
                    </CheckBox>

                    <TextBlock Grid.Column="1" Text="EDITING" Style="{StaticResource Caption}"/>
                    <CheckBox Grid.Column="1" Grid.Row="1" Content=" Enable" VerticalAlignment="Center" IsChecked="{Binding Config.CanEdit}"
                              ToolTipService.ShowOnDisabled="True" ToolTipService.InitialShowDelay="0">
                        <CheckBox.Style>
                            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Config.UseOutputAlias}" Value="True">
                                        <Setter Property="ToolTip" Value="Editing is not possible while using Output Alias."/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <CheckBox Grid.Row="2" Grid.Column="1" Content=" Template Rows" IsChecked="{Binding Config.UseInsertTemplate}" IsEnabled="{Binding Config.CanEdit}"/>

                    <UniformGrid Grid.Row="2" Grid.Column="2" Columns="2">
                        <Button Content="Undo" Command="{Binding History.UndoCommand}" Margin="0,0,4,0"/>
                        <Button Content="Redo" Command="{Binding History.RedoCommand}" Margin="0,0,4,0"/>
                    </UniformGrid>

                    <CheckBox Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" IsChecked="{Binding Config.InsertSelectedCount}" IsEnabled="{Binding Config.CanEdit}" Margin="4,0"
                                      Content="{Binding Edit.SelectedItems.Count}" ContentStringFormat=" Insert selected rows (×{0})"/>
                    <ToggleButton Name="Insert" Grid.Row="2" Grid.Column="3" Content="Insert" Margin="4,0" IsChecked="{Binding Edit.IsInsertExpanded}" Command="{Binding Edit.CanInsertCommand}"
                                  ToolTipService.InitialShowDelay="0" ToolTipService.ShowOnDisabled="True">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="ToolTip" Value="Insertion is not possible when Insert Selected Rows is enabled, but no rows are selected."/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup PlacementTarget="{Binding ElementName=Insert}" IsOpen="{Binding Edit.IsInsertExpanded}" StaysOpen="False">
                        <StackPanel Width="{Binding ElementName=Insert, Path=ActualWidth}">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Height" Value="30"/>
                                </Style>
                            </StackPanel.Resources>
                            <Button Command="{Binding Edit.InsertTopCommand}"   Content="At Top"/>
                            <Button Command="{Binding Edit.InsertAboveCommand}" Content="Above"/>
                            <Button Command="{Binding Edit.InsertBelowCommand}" Content="Below"/>
                            <Button Command="{Binding Edit.InsertLastCommand}"  Content="At Bottom"/>
                        </StackPanel>
                    </Popup>
                    <Button Grid.Row="2" Grid.Column="4" Content="Remove" Command="{Binding Edit.RemoveCommand}" Margin="4,0"/>
                    <Button Grid.Row="2" Grid.Column="5" Content="Save" Command="{Binding Edit.SaveCommand}" Margin="4,0"/>

                    <TextBlock Grid.Column="7" Text="SELECTION" Style="{StaticResource Caption}"/>
                    <Button Grid.Column="7" Grid.Row="1" Content="Copy Row" Margin="0,-2,0,2" Command="{Binding Preview.CopyStringCommand}"/>
                    <Button Grid.Column="7" Grid.Row="2" Content="Copy Image" Command="{Binding Preview.CopyImageCommand}"/>
                </Grid>
            </Expander>

            <DockPanel Grid.Column="1" Margin="8,8,16,8" Height="36" VerticalAlignment="Top">
                <Button Content="Filter" DockPanel.Dock="Right" Height="24" Padding="96,0,96,0" Command="{Binding Filter.FilterCommand}"/>
                <Grid Margin="0,0,8,0">
                    <TextBlock Height="24" Padding="7,3" Foreground="{StaticResource Rows.Caption}" Background="{StaticResource TextBox.Background}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Filter.FilterText}" Value="">
                                        <Setter Property="Text" Value="Enter filter criteria"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox Text="{Binding Filter.FilterText, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="24" Padding="4,0"
                             Background="Transparent">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Filter.HasFocus}" Value="True">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding Filter.FilterCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </Grid>
            </DockPanel>
        </Grid>

        <!-- Empty Grid messages (left) -->
        <TextBlock Grid.Row="1" VerticalAlignment="Center" TextAlignment="Center" LineHeight="20"
                   Text="No results&#x0a;Please try a different filter term or add new rows">
            <TextBlock.Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource Caption}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CsvView.IsEmpty}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <!-- DataGrid (left) -->
        <DataGrid Name="Grid" ItemsSource="{Binding CsvView, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  FrozenColumnCount="{Binding Config.FrozenColumn}" SelectedIndex="{Binding Edit.SelectedIndex}"
                  Foreground="{StaticResource Rows.Text}" MinRowHeight="{Binding Config.MinRowHeight}" 
                  Grid.Row="1" Background="Transparent" GridLinesVisibility="None" BorderThickness="0" 
                  CanUserAddRows="False" CanUserDeleteRows="False" RowHeaderWidth="10"
                  EnableColumnVirtualization="True" EnableRowVirtualization="True"
                  AutoGeneratingColumn="Grid_AutoGeneratingColumn"
                  CurrentCellChanged="Grid_CurrentCellChanged"
                  SelectionChanged="Grid_SelectionChanged">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="BeginningEdit">
                    <b:InvokeCommandAction Command="{Binding Edit.BeginEditCommand}"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="CellEditEnding">
                    <b:InvokeCommandAction Command="{Binding Edit.EndEditCommand}" PassEventArgsToCommand="True"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding Edit.RemoveCommand}"/>
                <KeyBinding Gesture="CTRL+C" Command="{Binding Preview.CopyStringCommand}"/>
            </DataGrid.InputBindings>
            <DataGrid.RowHeaderStyle>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="Transparent"/>
                <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Config.CanEdit}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="IsReadOnly" Value="True"/>
                </Style>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Rows.DataGrid.Hover}"/>
                        </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{Binding Color, Source={StaticResource Rows.DataGrid.Selected}}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{Binding Color, Source={StaticResource Rows.DataGrid.Selected.Control}}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{Binding Color, Source={StaticResource Rows.DataGrid.Selected.Text}}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{Binding Color, Source={StaticResource Rows.DataGrid.Selected.Text}}"/>
                    </Style.Resources>
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="MinWidth" Value="128"/>
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Foreground" Value="{StaticResource Rows.Caption}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Grid>
                                    <Border Name="BRIN" CornerRadius="1" Padding="4,4,4,2" BorderThickness="0">
                                        <ContentPresenter/>
                                    </Border>
                                    <Path Name="SortArrow" Stroke="{StaticResource Rows.Caption}" Data="M0,0 L4,4 L8,0" Visibility="Collapsed"
                                          HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5"/>
                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"/>
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleY="-1"/>
                                                </TransformGroup>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="BRIN" Property="Border.Background" Value="{StaticResource Rows.DataGrid.Selected.Control}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="BRIN" Property="Border.Background" Value="{StaticResource Rows.DataGrid.Selected}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
        </DataGrid>

        <!-- Preview image (right) -->
        <Grid Grid.Row="1" Grid.Column="1">
            <TextBlock Text="No preview available" Style="{StaticResource Caption}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <Image Source="{Binding Preview.PreviewSource}" ToolTip="Click to copy image" ToolTipService.InitialShowDelay="500">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseUp">
                        <b:InvokeCommandAction Command="{Binding Preview.CopyImageCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </Image>
        </Grid>
        <GridSplitter Grid.Row="1" Grid.Column="1" Width="8" Background="Transparent" HorizontalAlignment="Left"/>

        <!-- Status bar (bottom) -->
        <TextBlock Grid.Row="2" VerticalAlignment="Bottom" Style="{StaticResource Caption}">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} of {1} selected">
                    <Binding ElementName="Grid" Path="SelectedItems.Count"/>
                    <Binding ElementName="Grid" Path="Items.Count"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock Grid.Row="2" HorizontalAlignment="Right" Text="Ready" Grid.Column="1" Margin="0,8,0,0">
            <TextBlock.Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource Caption}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Edit.IsEditing}" Value="True">
                            <Setter Property="Text" Value="Editing"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</Window>
